/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.9.v20180320
 * Generated at: 2019-12-22 11:17:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Cms后台登录</title>\r\n");
      out.write("<link href=\"/public/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"/public/css/cms.css\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"/public/css/index.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<nav class=\"nav justify-content-start\" style=\"background-color: #222;\">\r\n");
      out.write("\t\t<a class=\"nav-link navbar-brand\" href=\"#\">\r\n");
      out.write("\t\t\t<img src=\"https://v4.bootcss.com/docs/4.3/assets/brand/bootstrap-solid.svg\" width=\"30\" height=\"30\" alt=\"\">\r\n");
      out.write("\t\t</a>\r\n");
      out.write("\t\t<a class=\"nav-link\" href=\"/\">网站首页</a> \r\n");
      out.write("\t</nav>\r\n");
      out.write("\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t<div class=\"col-4 offset-4 loginForm\">\r\n");
      out.write("\t\t\t<h3>欢迎回来</h3>\r\n");
      out.write("\t\t\t<div class=\"alert alert-danger\" role=\"alert\" style=\"display: none\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<form id=\"loginForm\">\r\n");
      out.write("\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t    <input type=\"text\" id=\"username\" name=\"username\" class=\"form-control\" placeholder=\"请输入用户名...\">\r\n");
      out.write("\t\t\t    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t    <!-- <label for=\"exampleInputPassword1\">密码</label> -->\r\n");
      out.write("\t\t\t    <input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\"  placeholder=\"请输入密码...\">\r\n");
      out.write("\t\t\t  </div>\r\n");
      out.write("\t\t\t  <button type=\"button\" class=\"btn btn-primary\" onclick=\"login();\">登录</button>\r\n");
      out.write("\t\t\t  <label for=\"exampleInputPassword1\">没有帐号，去<a href=\"/user/register\">注册</a></label>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("<script type=\"text/javascript\" src=\"/public/js/jquery.min.1.12.4.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/public/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction login(){\r\n");
      out.write("\t\t//空判断\r\n");
      out.write("\t\tvar username = $(\"#username\").val();\r\n");
      out.write("\t\tvar password = $(\"#password\").val();\r\n");
      out.write("\t\tif(username==null || password==\"\"){\r\n");
      out.write("\t\t\t$(\".alert\").html(\"请输入用户名和密码\");\r\n");
      out.write("\t\t\t$(\".alert\").show();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(\".alert\").hide();\r\n");
      out.write("\t\t//后台验证\r\n");
      out.write("\t\tvar formData = $(\"#loginForm\").serialize();\r\n");
      out.write("\t\t$.post(\"/user/login\",formData,function(res){\r\n");
      out.write("\t\t\tif(res.result){\r\n");
      out.write("\t\t\t\t//验证通过跳转到后台首页\r\n");
      out.write("\t\t\t\tlocation.href=\"/\";\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t//否则提示错误信息\r\n");
      out.write("\t\t\t\t$(\".alert\").html(res.message);\r\n");
      out.write("\t\t\t\t$(\".alert\").show();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
